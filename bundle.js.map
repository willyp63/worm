{"version":3,"sources":["webpack:///webpack/bootstrap a7f524af6fdb54a402dc","webpack:///./lib/entry.js","webpack:///./lib/game.js","webpack:///./lib/worm.js","webpack:///./lib/util/locations.js","webpack:///./lib/link.js","webpack:///./lib/apple.js","webpack:///./lib/util/images.js","webpack:///./lib/game_view.js","webpack:///./lib/util/dom.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,WAAW;AACvC,8BAA6B,WAAW;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B,WAAW;AACxC;AACA,+BAA8B,WAAW;;AAEzC;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACjCD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAiC,QAAQ;;AAEzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA,mBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvJA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,0CAAyC;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAqC,0BAA0B;AAC/D,oCAAmC,sBAAsB;AACzD,oCAAmC,sCAAsC;;AAEzE;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,wCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAgC,yBAAyB;AACzD,iCAAgC,yBAAyB;;AAEzD;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,mCAAkC,MAAM;AACxC;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a7f524af6fdb54a402dc\n **/","const Game = require('./game.js');\nconst GameView = require('./game_view.js');\nconst Images = require('./util/images');\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  // init game canvas\n  const gameCanvas = document.getElementById('game-canvas');\n  const gameCanvasBack = document.getElementById('game-canvas-back');\n  const gameView = document.getElementsByClassName('game-view')[0];\n  const gameHeight = window.innerHeight - 50;\n  gameCanvas.width = gameHeight;\n  gameCanvas.height = gameHeight;\n  gameCanvasBack.width = gameHeight;\n  gameCanvasBack.height = gameHeight;\n  gameView.style.width = `${gameHeight}px`;\n  gameView.style.height = `${gameHeight}px`;\n\n  // init bg canvas\n  const bgCanvas = document.getElementById('bg-canvas');\n  bgCanvas.width = window.innerWidth;\n  bgCanvas.height = window.innerHeight;\n  Images.drawGrassImage(bgCanvas);\n\n  // init panes\n  const leftPane = document.getElementsByClassName('left-pane')[0];\n  leftPane.style.height = `${gameHeight}px`;\n  const rightPane = document.getElementsByClassName('right-pane')[0];\n  rightPane.style.height = `${gameHeight}px`;\n\n  // init game\n  const ctx = gameCanvas.getContext(\"2d\");\n  const game = new Game(gameCanvas.width);\n  new GameView(game, ctx).start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","const Worm = require('./worm');\nconst Apple = require('./apple');\nconst Locations = require('./util/locations');\nconst Images = require('./util/images');\nconst DOM = require('./util/dom');\n\nconst Game = function (size) {\n  this.size = size;\n  this.wormRadius = this.size / Game.WORM_SCALE;\n  this.appleRadius = this.size / Game.APPLE_SCALE;\n  this.keysPressed = [];\n  this.dirtImage = Images.generateDirtImage(this.size, Game.BORDER_WIDTH);\n  this.score = 0;\n  this.state = 'NEW_GAME';\n};\n\nGame.BORDER_WIDTH = 2;\nGame.WORM_SCALE = 40;\nGame.APPLE_SCALE = 60;\n\nGame.prototype.step = function (timeDelta) {\n  if (this.state !== 'PLAYING') { return; }\n\n  DOM.setScore(this.worm.length());\n\n  if (this.worm.collidedWithSelf() || this.offBoard()) {\n    this.state = 'GAME_OVER';\n    return;\n  }\n\n  if (this.wormAppleCollision()) {\n    this.worm.grow();\n    this.worm.swallow();\n    this._resetApple();\n    return;\n  }\n\n  this.worm.step(timeDelta);\n};\n\nGame.prototype.offBoard = function () {\n  const center = [this.size / 2, this.size / 2];\n  let dist = Locations.distance(this.worm.head().location, center);\n  dist += this.worm.head().radius;\n  return (dist > (this.size / 2) - Game.BORDER_WIDTH);\n};\n\nGame.prototype.wormAppleCollision = function () {\n  const dist = Locations.distance(this.worm.head().location, this.apple.location);\n  return (dist < this.worm.head().radius + this.apple.radius);\n};\n\nGame.prototype.draw = function (ctx) {\n  switch (this.state) {\n    case 'PAUSED':\n      DOM.showPopUp('PAUSED', 'Click to resume');\n      break;\n    case 'GAME_OVER':\n      DOM.showPopUp('GAME OVER', 'Click to play again');\n      break;\n    case 'NEW_GAME':\n      DOM.showPopUp('NEW GAME', 'Click to start');\n      ctx.drawImage(this.dirtImage, 0, 0);\n      break;\n    case 'PLAYING':\n      DOM.hidePopUp();\n      ctx.clearRect(0, 0, this.size, this.size);\n      ctx.drawImage(this.dirtImage, 0, 0);\n      this.apple.draw(ctx);\n      this.worm.draw(ctx);\n  }\n};\n\nGame.prototype._reset = function () {\n  this.worm = new Worm([this.size / 2, this.size / 2], this.wormRadius);\n  this._resetApple();\n  this.score = 0;\n  this.state = 'PLAYING';\n};\n\nGame.prototype._resetApple = function () {\n  const maxRadius = ((this.size - Game.BORDER_WIDTH) / 2) - (this.appleRadius * 2);\n  do {\n    const loc = Locations.randomLocation(this.size / 2, maxRadius);\n    if (this.apple) {\n      this.apple.location = loc;\n    } else {\n      this.apple = new Apple(loc, this.appleRadius);\n    }\n  } while (this.worm.collidedWith(this.apple.location, this.appleRadius));\n};\n\nGame.prototype.handleKeyDown = function (e) {\n  let i;\n  switch (e.keyCode) {\n    case 65: // A\n      i = this.keysPressed.indexOf('a');\n      if (i < 0) { this.keysPressed.push('a'); }\n      break;\n    case 68: // D\n      i = this.keysPressed.indexOf('d');\n      if (i < 0) { this.keysPressed.push('d'); }\n      break;\n  }\n  this._updateWormState();\n};\n\nGame.prototype.handleKeyUp = function (e) {\n  let i;\n  switch (e.keyCode) {\n    case 65: // A\n      i = this.keysPressed.indexOf('a');\n      if (i >= 0) { this.keysPressed.splice(i, 1); }\n      break;\n    case 68: // D\n      i = this.keysPressed.indexOf('d');\n      if (i >= 0) { this.keysPressed.splice(i, 1); }\n      break;\n  }\n  this._updateWormState();\n};\n\nGame.prototype._updateWormState = function () {\n  const a = (this.keysPressed.indexOf('a') >= 0);\n  const d = (this.keysPressed.indexOf('d') >= 0);\n  if (a && d) {\n    this.worm.swivel();\n  } else if (a) {\n    this.worm.leanLeft();\n  } else if (d) {\n    this.worm.leanRight();\n  } else {\n    this.worm.swivel();\n  }\n};\n\nGame.prototype.handleClick = function (e) {\n  switch (this.state) {\n    case 'PAUSED':\n      this.state = 'PLAYING';\n      break;\n    case 'PLAYING':\n      this.state = 'PAUSED';\n      break;\n    case 'NEW_GAME':\n    case 'GAME_OVER':\n      DOM.flipBoard();\n      this._reset();\n  }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Locations = require('./util/locations');\nconst Link = require('./link');\n\nconst Worm = function (location, radius) {\n  this.radius = radius;\n  this.links = [new Link(location, this.radius)];\n  this.direction = 0;\n  this.alpha = 0; // angular acceleration\n  this.growing = Worm.INITIAL_LENGTH - 1; // number of links to grow\n  this.growAlt = true;\n\n  this.swiveling = true;\n  this.swivelCount = 0;\n\n  this.swallowing = false;\n  this.swallowCount = 0;\n  this.platoCount = 0;\n};\n\n// physical properties\nWorm.SPEED = 2;\nWorm.LEAN_ALPHA = Math.PI / 36;\nWorm.INITIAL_LENGTH = 10;\nWorm.GROW_LENGTH = 60;\nWorm.SWIVEL_PERIOD = 8;\nWorm.SWALLOW_RATIO = 0.35;\nWorm.SWALLOW_SPEED_RATIO = 1.35;\nWorm.SWALLOW_PERIOD = 16;\nWorm.SWALLOW_PLATO = 16;\n\n// astetic properties\nWorm.COLOR = '#ff33cc';\nWorm.BORDER_COLOR = '#730056';\nWorm.BORDER_WIDTH = 2;\n\nWorm.prototype.length = function () { return this.links.length; };\nWorm.prototype.head = function () { return this.links[0]; };\nWorm.prototype.tail = function () { return this.links[this.length() - 1]; };\n\nWorm.prototype.step = function (timeDelta) {\n  // change direction\n  if (this.swiveling) {\n    this.swivelStep();\n  } else {\n    this.direction += this.alpha;\n  }\n\n  // advance in direction\n  const speed = this.swallowCount < 0 ? Worm.SPEED * Worm.SWALLOW_SPEED_RATIO : Worm.SPEED;\n  const radius = this.swallowing ? this.swallowRadius() : this.radius;\n  const oldLocation = this.head().location;\n  const newLocation = Locations.advance(oldLocation, this.direction, speed, timeDelta);\n  const newHead = new Link(newLocation, radius);\n  this.links.unshift(newHead);\n\n  // drop tail or grow\n  if (this.growing) {\n    if (this.growAlt) {\n      this.growing--;\n    } else {\n      this.links.pop();\n    }\n    this.growAlt = !this.growAlt;\n  } else {\n    this.links.pop();\n  }\n\n  this.links.forEach(link => {\n    link.step(this.radius);\n  });\n};\n\nWorm.prototype.swivelStep = function () {\n  if (this.swivelCount < 0) {\n    this.direction += Worm.LEAN_ALPHA;\n  } else {\n    this.direction -= Worm.LEAN_ALPHA;\n  }\n\n  this.swivelCount++;\n  if (this.swivelCount >= Worm.SWIVEL_PERIOD) {\n     this.swivelCount = -Worm.SWIVEL_PERIOD;\n  }\n};\n\nWorm.prototype.swallowRadius = function () {\n  if (this.swallowCount === 0) {\n    // plato\n    this.platoCount++;\n    if (this.platoCount >= Worm.SWALLOW_PLATO) {\n      this.swallowCount++;\n    }\n    return this.radius * (1 + Worm.SWALLOW_RATIO);\n  } else {\n    // ramp up/ramp down\n    const ratio = (Worm.SWALLOW_PERIOD - Math.abs(this.swallowCount)) / Worm.SWALLOW_PERIOD;\n    const maxDif = Worm.SWALLOW_RATIO * this.radius;\n    const radius = this.radius + (maxDif * ratio);\n\n    this.swallowCount++;\n    if (this.swallowCount >= Worm.SWALLOW_PERIOD) {\n      this.swallowing = false;\n    }\n    return radius;\n  }\n};\n\nWorm.prototype.draw = function (ctx) {\n  // calc perimeter points\n  const topPoints = [];\n  const bottomPoints = [];\n  let loc = this.head().location;\n  const headDir = Locations.direction(loc, this.links[1].location);\n  let p1 = Locations.advance(loc, headDir - Math.PI / 2, this.head().radius, 1);\n  let p2 = Locations.advance(loc, headDir + Math.PI / 2, this.head().radius, 1);\n  topPoints.push(p1);\n  bottomPoints.push(p2);\n  for (let i = 0; i < this.length() - 2; i++) {\n    loc = this.links[i + 1].location;\n    const prev = this.links[i].location;\n    const next = this.links[i + 2].location;\n    const dir = Locations.direction(prev, next);\n    p1 = Locations.advance(loc, dir - Math.PI / 2, this.links[i + 1].radius, 1);\n    p2 = Locations.advance(loc, dir + Math.PI / 2, this.links[i + 1].radius, 1);\n    topPoints.push(p1);\n    bottomPoints.push(p2);\n  }\n  loc = this.tail().location;\n  const prev = this.links[this.length() - 2].location;\n  const tailDir = Locations.direction(prev, loc);\n  p1 = Locations.advance(loc, tailDir - Math.PI / 2, this.tail().radius, 1);\n  p2 = Locations.advance(loc, tailDir + Math.PI / 2, this.tail().radius, 1);\n  topPoints.push(p1);\n  bottomPoints.push(p2);\n\n  // connect the dots\n  ctx.beginPath();\n  ctx.fillStyle = Worm.COLOR;\n  ctx.strokeStyle = Worm.BORDER_COLOR;\n  ctx.lineWidth = 2;\n  ctx.moveTo(...topPoints[0]);\n  for (let i = 1; i < topPoints.length; i++) {\n    ctx.lineTo(...topPoints[i]);\n  }\n  ctx.arc(this.tail().x(), this.tail().y(), this.tail().radius,\n            tailDir - Math.PI / 2, tailDir + Math.PI / 2);\n  for (let i = bottomPoints.length - 2; i >= 0; i--) {\n    ctx.lineTo(...bottomPoints[i]);\n  }\n  ctx.arc(this.head().x(), this.head().y(), this.head().radius,\n            headDir + Math.PI / 2, headDir - Math.PI / 2);\n  ctx.fill();\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.fillStyle = Worm.BORDER_COLOR;\n  // draw mouth if swallowing\n  if (this.swallowCount < -Worm.SWALLOW_PERIOD / 3) {\n    const mouth = Locations.advance(this.head().location, this.direction, this.head().radius / 3, 1);\n    ctx.beginPath();\n    ctx.arc(mouth[0], mouth[1], this.head().radius * 2 / 3, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n  } else {\n    // draw eyes\n    const eye1 = Locations.advance(this.head().location,\n                  this.direction + Math.PI / 8, this.head().radius / 2, 1);\n    const eye2 = Locations.advance(this.head().location,\n                  this.direction - Math.PI / 8, this.head().radius / 2, 1);\n    ctx.beginPath();\n    ctx.arc(eye1[0], eye1[1], this.head().radius / 8, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n    ctx.beginPath();\n    ctx.arc(eye2[0], eye2[1], this.head().radius / 8, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n  }\n};\n\nWorm.prototype.collidedWith = function (location, radius) {\n  for (let i = 0; i < this.length(); i++) {\n    const link = this.links[i];\n    const dist = Locations.distance(link.location, location);\n    if (dist < link.radius + radius) {\n      return true;\n    }\n  }\n  return false;\n};\n\nWorm.prototype.collidedWithSelf = function () {\n  const offset = Math.floor(this.radius / Worm.SPEED) * 4;\n  const head = this.head();\n  for (let i = offset; i < this.length(); i++) {\n    const link = this.links[i];\n    const dist = Locations.distance(link.location, head.location);\n    if (dist < link.radius + head.radius) {\n      return true;\n    }\n  }\n  return false;\n};\n\nWorm.prototype.grow = function () {\n  this.growAlt = true;\n  this.growing += Worm.GROW_LENGTH;\n};\n\nWorm.prototype.leanRight = function () {\n  this.swiveling = false;\n  this.alpha = Worm.LEAN_ALPHA;\n};\n\nWorm.prototype.leanLeft = function () {\n  this.swiveling = false;\n  this.alpha = -Worm.LEAN_ALPHA;\n};\n\nWorm.prototype.swivel = function () {\n  if (this.swiveling) { return; }\n  this.swiveling = true;\n  if (this.alpha > 0) {\n    this.swivelCount = Worm.SWIVEL_PERIOD / 2;\n  } else {\n    this.swivelCount = -Worm.SWIVEL_PERIOD / 2;\n  }\n};\n\nWorm.prototype.swallow = function () {\n  if (this.swallowing) {\n    if (this.swallowCount > 0) {\n      this.swallowCount *= -1;\n    }\n  } else {\n    this.swallowing = true;\n    this.swallowCount = -Worm.SWALLOW_PERIOD;\n    this.platoCount = 0;\n  }\n};\n\nmodule.exports = Worm;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/worm.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = {\n  randomLocation (center, size) {\n    const radius = Math.random() * size;\n    const theta = Math.random() * Math.PI * 2;\n    const dx = Math.cos(theta) * radius;\n    const dy = Math.sin(theta) * radius;\n    return [dx + center, dy + center];\n  },\n  randomPoint (width, height) {\n    return [Math.random() * width, Math.random() * height];\n  },\n  randomDirection () {\n    return Math.random() * Math.PI * 2;\n  },\n  advance (location, direction, distance, delta) {\n    const c = distance * delta;\n    const x = location[0] + (Math.cos(direction) * c);\n    const y = location[1] + (Math.sin(direction) * c);\n    return [x, y];\n  },\n  distance (location1, location2) {\n    const dx = location2[0] - location1[0];\n    const dy = location2[1] - location1[1];\n    return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n  },\n  direction (location1, location2) {\n    return Math.atan2(location2[1] - location1[1], location2[0] - location1[0]);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util/locations.js\n ** module id = 3\n ** module chunks = 0\n **/","const Link = function (location, radius) {\n  this.location = location;\n  this.radius = radius;\n  this.count = 16;\n};\n\nLink.prototype.step = function (minRadius) {\n  if (this.count > 0) {\n    this.count--;\n    return;\n  }\n  if (this.radius > minRadius) {\n    this.radius -= 0.05;\n  }\n  if (this.radius < minRadius) {\n    this.radius = minRadius;\n  }\n};\n\nLink.prototype.x = function () { return this.location[0]; };\nLink.prototype.y = function () { return this.location[1]; };\n\nmodule.exports = Link;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/link.js\n ** module id = 4\n ** module chunks = 0\n **/","const Images = require('./util/images');\n\nconst Apple = function (location, radius) {\n  this.radius = radius;\n  this.location = location;\n  Images.loadAppleImage(appleImage => {\n    this.image = appleImage;\n  });\n};\n\nApple.COLOR = '#ff0000';\nApple.BORDER_WIDTH = 2;\n\nApple.prototype.draw = function (ctx) {\n  if (!this.image) { return; }\n  const x = this.location[0] - this.radius * 3 / 2;\n  const y = this.location[1] - this.radius * 3 / 2;\n  const size = this.radius * 3;\n  ctx.drawImage(this.image, x, y, size, size);\n};\n\nmodule.exports = Apple;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/apple.js\n ** module id = 5\n ** module chunks = 0\n **/","const Locations = require('./locations.js');\n\nconst Images = {\n  PEBBLE_COLORS: ['#E69849', '#EB9034', '#F0B57A', '#F5AF69', '#DE9B57'],\n  PEBBLE_BORDER_COLOR: '#6E3C0A',\n  DIRT_COLOR: \"#F7A654\",\n  DIRT_BORDER_COLOR: \"#7A3E00\",\n  GRASS_COLORS: ['#148C14', '#0BB80B', '#038503', '#4C6B15', '#598C00']\n};\n\nmodule.exports = {\n  generateDirtImage (size, borderWidth) {\n    const dirtImage = document.createElement(\"canvas\");\n    dirtImage.width = size;\n    dirtImage.height = size;\n    const ctx = dirtImage.getContext(\"2d\");\n\n    // draw dirt circle\n    ctx.beginPath();\n    ctx.fillStyle = Images.DIRT_COLOR;\n    ctx.strokeStyle = Images.DIRT_BORDER_COLOR;\n    ctx.lineWidth = borderWidth;\n    ctx.arc(size / 2, size / 2, (size - borderWidth) / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n\n    for (let i = 0; i < 50; i++) {\n      const randomRadius = Math.random() * 3 + 2;\n      const radius = ((size - borderWidth) / 2) - (randomRadius * 2);\n      const randomLocation = Locations.randomLocation(size / 2, radius);\n      ctx.beginPath();\n      const k = Math.floor(Math.random() * Images.PEBBLE_COLORS.length);\n      ctx.fillStyle = Images.PEBBLE_COLORS[k];\n      ctx.strokeStyle = Images.PEBBLE_BORDER_COLOR;\n      ctx.lineWidth = 1;\n      ctx.arc(randomLocation[0], randomLocation[1], randomRadius, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n      ctx.closePath();\n    }\n    return dirtImage;\n  },\n  drawGrassImage (canvas) {\n    const ctx = canvas.getContext(\"2d\");\n    for (let i = 0; i < 20000; i++) {\n      ctx.lineWidth = Math.random() * 2 + 1;\n      const k = Math.floor(Math.random() * Images.GRASS_COLORS.length);\n      ctx.strokeStyle = Images.GRASS_COLORS[k];\n      ctx.beginPath();\n      const p1 = Locations.randomPoint(canvas.width, canvas.height);\n      const p2 = Locations.advance(p1, Locations.randomDirection(), 25, 1);\n      ctx.moveTo(...p1);\n      ctx.lineTo(...p2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n  },\n  loadAppleImage (callback) {\n    const appleImage = new Image();\n    appleImage.onload = function () {\n      callback(appleImage);\n    };\n    appleImage.src = 'assets/images/apple.png';\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util/images.js\n ** module id = 6\n ** module chunks = 0\n **/","const GameView = function (game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n};\n\nGameView.prototype.bindKeyHandlers = function () {\n  const game = this.game;\n  window.addEventListener('keydown', game.handleKeyDown.bind(game));\n  window.addEventListener('keyup', game.handleKeyUp.bind(game));\n  const canvas = document.getElementById('game-canvas');\n  canvas.addEventListener('click', game.handleClick.bind(game));\n  const popup = document.getElementById('game-popup');\n  popup.addEventListener('click', game.handleClick.bind(game));\n};\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\nGameView.prototype.animate = function (time) {\n  const timeDelta = (time - this.lastTime) / NORMAL_FRAME_TIME_DELTA;\n  this.game.step(timeDelta);\n  this.game.draw(this.ctx);\n  this.lastTime = time;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = {\n  flipBoard () {\n    // copy front canvas to back\n    const backCanvas = document.getElementById('game-canvas-back');\n    const canvas = document.getElementById('game-canvas');\n    const backCtx = backCanvas.getContext(\"2d\");\n    backCtx.drawImage(canvas, 0, 0);\n\n    // flip back to front\n    const gameBoard = document.getElementById('game-board');\n    backCanvas.style.transform = 'rotateY( 0deg )';\n    canvas.style.transform = 'rotateY( 180deg )';\n    gameBoard.style.transition = 'transform 0.75s';\n    gameBoard.className = 'flipped';\n\n    // swap canvases back again\n    setTimeout(function () {\n      gameBoard.style.transition = 'transform 0s';\n      gameBoard.className = '';\n      backCanvas.style.transform = 'rotateY( 180deg )';\n      canvas.style.transform = 'rotateY( 0deg )';\n    }, 1000);\n  },\n  showPopUp (mainText, subText) {\n    const popup = document.getElementById('game-popup');\n    popup.className = '';\n    const popupText = document.getElementById('game-popup-text');\n    popupText.innerHTML = mainText;\n    const popupSubtext = document.getElementById('game-popup-subtext');\n    popupSubtext.innerHTML = subText;\n  },\n  hidePopUp () {\n    const popup = document.getElementById('game-popup');\n    popup.className = 'hidden';\n  },\n  setScore (score) {\n    const scoreEl = document.getElementById('score');\n    scoreEl.innerHTML = `Score: ${score}`;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util/dom.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}